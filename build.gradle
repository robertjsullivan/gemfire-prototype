buildscript {
	ext {
		springBootVersion = '1.3.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot' 

jar {
	baseName = 'prototype'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
	maven {
	    url "http://dist.gemstone.com/maven/release"
	}
}

task 'run-generic'(type: JavaExec) {
	description "Runs the damn main class"
	main = 'io.pivotal.gemfire.PrototypeApplication'
	classpath = sourceSets.main.runtimeClasspath;

	standardInput = System.in
	systemProperties = System.getProperties()
	if (rootProject.hasProperty('args')) {
		args = ["${rootProject.getProperty('args')}"]
	}
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-gemfire')
	compile('com.gemstone.gemfire:gemfire:8.1.0')
	testCompile('org.springframework.boot:spring-boot-starter-test') 
}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.12'
}
